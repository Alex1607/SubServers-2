<?xml version="1.0" encoding="UTF-8"?>
<project name="module_subservers.host" default="compile.module.subservers.host">
  <dirname property="module.subservers.host.basedir" file="${ant.file.module_subservers.host}"/>
  
  <property name="module.jdk.home.subservers.host" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.subservers.host" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.subservers.host" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.subservers.host" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="subservers.host.output.dir" value="${module.subservers.host.basedir}/../out/compile/production/SubServers.Host"/>
  <property name="subservers.host.testoutput.dir" value="${module.subservers.host.basedir}/../out/compile/test/SubServers.Host"/>
  
  <path id="subservers.host.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="subservers.host.module.production.classpath">
    <path refid="${module.jdk.classpath.subservers.host}"/>
    <pathelement location="${basedir}/../~lib/json.jar"/>
    <pathelement location="${basedir}/../~lib/jline-2.12.jar"/>
    <pathelement location="${basedir}/../~lib/jansi-1.16.jar"/>
  </path>
  
  <path id="subservers.host.runtime.production.module.classpath">
    <pathelement location="${subservers.host.output.dir}"/>
    <pathelement location="${basedir}/../~lib/json.jar"/>
    <pathelement location="${basedir}/../~lib/jline-2.12.jar"/>
    <pathelement location="${basedir}/../~lib/jansi-1.16.jar"/>
  </path>
  
  <path id="subservers.host.module.classpath">
    <path refid="${module.jdk.classpath.subservers.host}"/>
    <pathelement location="${subservers.host.output.dir}"/>
    <pathelement location="${basedir}/../~lib/json.jar"/>
    <pathelement location="${basedir}/../~lib/jline-2.12.jar"/>
    <pathelement location="${basedir}/../~lib/jansi-1.16.jar"/>
  </path>
  
  <path id="subservers.host.runtime.module.classpath">
    <pathelement location="${subservers.host.testoutput.dir}"/>
    <pathelement location="${subservers.host.output.dir}"/>
    <pathelement location="${basedir}/../~lib/json.jar"/>
    <pathelement location="${basedir}/../~lib/jline-2.12.jar"/>
    <pathelement location="${basedir}/../~lib/jansi-1.16.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.subservers.host">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.subservers.host">
    <patternset refid="excluded.from.module.subservers.host"/>
  </patternset>
  
  <path id="subservers.host.module.sourcepath">
    <dirset dir="${module.subservers.host.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.subservers.host" depends="compile.module.subservers.host.production,compile.module.subservers.host.tests" description="Compile module SubServers.Host"/>
  
  <target name="compile.module.subservers.host.production" depends="register.custom.compilers" description="Compile module SubServers.Host; production classes">
    <mkdir dir="${subservers.host.output.dir}"/>
    <javac2 destdir="${subservers.host.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.subservers.host}/javac">
      <compilerarg line="${compiler.args.subservers.host}"/>
      <bootclasspath refid="subservers.host.module.bootclasspath"/>
      <classpath refid="subservers.host.module.production.classpath"/>
      <src refid="subservers.host.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.subservers.host"/>
    </javac2>
    
    <copy todir="${subservers.host.output.dir}">
      <fileset dir="${module.subservers.host.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.subservers.host.tests" depends="register.custom.compilers,compile.module.subservers.host.production" description="compile module SubServers.Host; test classes" unless="skip.tests"/>
  
  <target name="clean.module.subservers.host" description="cleanup module">
    <delete dir="${subservers.host.output.dir}"/>
    <delete dir="${subservers.host.testoutput.dir}"/>
  </target>
</project>